cache:
  key: "$CI_BUILD_REF_NAME-$CI_BUILD_STAGE"
  paths:
    - .composer/
    - .php_cs.cache


variables:
  COMPOSER_CACHE_DIR: ".composer"
  COMPOSER_PROCESS_TIMEOUT: "1800"
  COMPOSER_ALLOW_SUPERUSER: "1"
  TYPO3_PATH_WEB: "$CI_PROJECT_DIR/.Build/Web"
  TYPO3_VERSION: ^9
  MYSQL_DATABASE: "typo3"
  MYSQL_ROOT_PASSWORD: "joh316"
  typo3DatabaseName: "typo3"
  typo3DatabaseHost: "mysql"
  typo3DatabaseUsername: "root"
  typo3DatabasePassword: "joh316"

cgl:
  image: composer
  stage: test
  before_script:
    - composer require typo3/minimal="${TYPO3_VERSION}"
    - composer install
  script:
    - .Build/bin/php-cs-fixer fix --config=Build/.php_cs.php -v --dry-run --using-cache=no --path-mode=intersection `git diff --name-only --diff-filter=ACMRTUXB $COMMIT_RANGE`

typo3_8lts_php70:
  variables:
    TYPO3_VERSION: ^8
  image: php:7.0-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/

typo3_8lts_php71:
  variables:
    TYPO3_VERSION: ^8
  image: php:7.1-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/

typo3_8lts_php72:
  variables:
    TYPO3_VERSION: ^8
  image: php:7.2-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/

typo3_8lts_php73:
  variables:
    TYPO3_VERSION: ^8
  image: php:7.3-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/cms="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/


typo3_9lts_php72:
  variables:
    TYPO3_VERSION: ^9
  image: php:7.2-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/minimal="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/

typo3_9lts_php73:
  variables:
    TYPO3_VERSION: ^9
  image: php:7.3-alpine
  stage: test
  services:
    - mysql:5
  before_script:
    - apk --no-cache add bash curl git mercurial openssh openssl parallel subversion tini
    - docker-php-ext-install mysqli
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - composer require typo3/minimal="${TYPO3_VERSION}"
  script:
    - .Build/bin/phpunit --colors  -c .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/
